(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"3mtl":function(e,n,o){"use strict";o.r(n),n.default='import { Component, Input, forwardRef, ViewEncapsulation, OnInit, TemplateRef, Output, EventEmitter, Provider } from "@angular/core";\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from "@angular/forms";\nimport { randomId } from "@sebgroup/frontend-tools";\nimport { NgClass } from "@angular/common";\n\nexport const CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR: Provider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxComponent),\n    multi: true,\n};\n\n/** Checkboxes allow a user to toggle an option on or off, or make multiple choices in a set of available options. */\n@Component({\n    selector: "sebng-checkbox",\n    templateUrl: "./checkbox.component.html",\n    styleUrls: ["./checkbox.component.scss"],\n    providers: [CUSTOM_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class CheckboxComponent implements ControlValueAccessor {\n    /** Checkbox required label, supported types: `string`, `TemplateRef<HTMLElement>` */\n    @Input() label: string | TemplateRef<HTMLElement>;\n    /** Checbox optional id, supported type: `string`, default random string value will be set if not provided */\n    @Input() _id?: string = randomId("checkbox-");\n    /** Checkbox optional name, supported type: `string` */\n    @Input() name?: string;\n    /** Checkbox optional className, supported type: `ngClass` */\n    @Input() className?: NgClass;\n    /** Checkbox optional disabled state, supported type: `boolean`, default value: `false`*/\n    @Input() disabled?: boolean = false;\n    /** Checkbox optional description, supported types: `string`, `TemplateRef<HTMLElement>` */\n    @Input() description?: string | TemplateRef<HTMLElement>;\n    /** Checkbox optional error, supported types: `string`, `TemplateRef<HTMLElement>` */\n    @Input() error?: string | TemplateRef<HTMLElement>;\n    /** Checkbox optional onChange event emitter */\n    @Output() onChange?: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    private _value: boolean = false;\n\n    // Placeholders for the callbacks which are later provided\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void;\n    private onChangeCallback: (_: any) => void;\n\n    @Input()\n    get value(): boolean {\n        return this._value;\n    }\n\n    set value(v: boolean) {\n        if (v !== this._value) {\n            this._value = v;\n            this.onChangeCallback && this.onChangeCallback(v);\n            this.onTouchedCallback && this.onTouchedCallback();\n            this.onChange && this.onChange.emit(v);\n        }\n    }\n\n    // From ControlValueAccessor interface\n    writeValue(value: boolean): void {\n        if (value !== this._value) {\n            this._value = value;\n        }\n    }\n\n    // From ControlValueAccessor interface\n    registerOnChange(fn: (_: any) => {}): void {\n        this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    registerOnTouched(fn: () => {}): void {\n        this.onTouchedCallback = fn;\n    }\n\n    /**\n     * Check if input parameter is a string\n     */\n    isString = (input: any): boolean => {\n        return typeof input === "string";\n    };\n}\n'},i28j:function(e,n,o){"use strict";o.r(n),o.d(n,"CheckboxPageModule",function(){return x});var t=o("PGw9"),c=o("SVse"),a=o("rk0L"),r=o("s7LF"),l=o("dJsq"),i=o("dx3L"),s=o("iInd"),b=o("8Y7J"),p=o("17Ss"),h=o("Njz3"),u=o("Z9UA");function d(e,n){1&e&&(b.Tb(0,"div",18),b.Hc(1,"I am a custom label "),b.Tb(2,"a",19),b.Hc(3,"read me please"),b.Sb(),b.Sb())}function m(e,n){1&e&&(b.Tb(0,"div",20),b.Hc(1," I am a custom description "),b.Tb(2,"a",21),b.Hc(3,"read me please"),b.Sb(),b.Sb())}function g(e,n){1&e&&(b.Tb(0,"div",22),b.Hc(1," Click on the "),b.Tb(2,"a",21),b.Hc(3,"error link"),b.Sb(),b.Sb())}var C=function(){return["html.handlebars"]},k=[{path:"",component:function(){function e(){this.importString=o("3mtl"),this.disableCheckbox=!1,this.errorCheckbox=!1,this.customLabelCheckbox=!1,this.customErrorCheckbox=!1,this.customDescriptionCheckbox=!1,this.snippet='<sebng-checkbox [(ngModel)]="value" label="Checkbox label"></sebng-checkbox>',this.simpleCheckboxHTML='<sebng-checkbox \n    label="string label" \n    description="description label">\n</sebng-checkbox>',this.templateCheckboxHTML='<sebng-checkbox \n    [label]="customLabel" \n    [description]="customDescription">\n        <ng-template #customLabel>\n            <div class="custom-label">I am a custom label <a href="#">read me please</a></div>\n        </ng-template>\n        <ng-template #customDescription>\n            <div class="custom-description">I am a custom description <a href="#">read me please</a></div>\n        </ng-template>\n</sebng-checkbox>',document.title="Checkbox - SEB Angular Components"}return e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=b.Hb({type:e,selectors:[["app-checkbox-page"]],decls:45,vars:20,consts:[[3,"importString","showNotes"],["example",""],[3,"label","description","ngModel","disabled","error","ngModelChange"],["label",""],["description",""],["error",""],["code",""],["controls",""],[1,"row"],["label","custom label checkbox",1,"w-100",3,"ngModel","ngModelChange"],["label","show description",1,"w-100",3,"ngModel","ngModelChange"],["label","custom description checkbox",1,"w-100",3,"ngModel","ngModelChange"],["label","disable checkbox",1,"w-100",3,"ngModel","ngModelChange"],["label","error checkbox",1,"w-100",3,"ngModel","ngModelChange"],["label","custom error checkbox",1,"w-100",3,"ngModel","ngModelChange"],["notes",""],[1,"note-markdown"],[3,"languages"],[1,"custom-label"],["href",""],[1,"custom-description"],["href","www.google.com","rel","noopener noreferrer","target","_blank"],[1,"text-danger"]],template:function(e,n){if(1&e&&(b.Tb(0,"app-doc-page",0),b.Rb(1,1),b.Tb(2,"sebng-checkbox",2),b.ac("ngModelChange",function(e){return n.model=e}),b.Fc(3,d,4,0,"ng-template",null,3,b.Gc),b.Fc(5,m,4,0,"ng-template",null,4,b.Gc),b.Fc(7,g,4,0,"ng-template",null,5,b.Gc),b.Sb(),b.Qb(),b.Rb(9,6),b.Hc(10),b.Qb(),b.Rb(11,7),b.Tb(12,"div",8),b.Tb(13,"sebng-checkbox",9),b.ac("ngModelChange",function(e){return n.customLabelCheckbox=e}),b.Sb(),b.Tb(14,"sebng-checkbox",10),b.ac("ngModelChange",function(e){return n.showDescription=e}),b.Sb(),b.Tb(15,"sebng-checkbox",11),b.ac("ngModelChange",function(e){return n.customDescriptionCheckbox=e}),b.Sb(),b.Tb(16,"sebng-checkbox",12),b.ac("ngModelChange",function(e){return n.disableCheckbox=e}),b.Sb(),b.Tb(17,"sebng-checkbox",13),b.ac("ngModelChange",function(e){return n.errorCheckbox=e}),b.Sb(),b.Tb(18,"sebng-checkbox",14),b.ac("ngModelChange",function(e){return n.customErrorCheckbox=e}),b.Sb(),b.Sb(),b.Qb(),b.Rb(19,15),b.Tb(20,"div",16),b.Tb(21,"h2"),b.Hc(22,"Use Checkbox component"),b.Sb(),b.Tb(23,"p"),b.Tb(24,"code"),b.Hc(25,"sebng-checkbox"),b.Sb(),b.Hc(26," provides the same functionality as a native "),b.Tb(27,"code"),b.Hc(28,"input checkbox"),b.Sb(),b.Hc(29," enhanced with SEB Design styling and animations. "),b.Sb(),b.Tb(30,"h3"),b.Hc(31,"Checkbox template"),b.Sb(),b.Tb(32,"p"),b.Hc(33," The checkbox component accepts string or custom "),b.Tb(34,"code"),b.Hc(35,"label, description or error"),b.Sb(),b.Hc(36,". In order to use a string property, create the component this way "),b.Sb(),b.Tb(37,"app-code-snippet",17),b.Hc(38),b.Sb(),b.Tb(39,"p"),b.Hc(40,"A custom template can be passed this way"),b.Sb(),b.Tb(41,"app-code-snippet",17),b.Hc(42),b.Sb(),b.Tb(43,"p"),b.Hc(44,"Checkbox component support both template-driven and Reactive form"),b.Sb(),b.Sb(),b.Qb(),b.Sb()),2&e){var o=b.wc(4),t=b.wc(6),c=b.wc(8);b.mc("importString",n.importString)("showNotes",!0),b.Ab(2),b.mc("label",n.customLabelCheckbox?o:"Checkbox label")("description",n.customDescriptionCheckbox?t:n.showDescription&&"with optional description")("ngModel",n.model)("disabled",n.disableCheckbox)("error",n.customErrorCheckbox?c:n.errorCheckbox&&"with error"),b.Ab(8),b.Ic(n.snippet),b.Ab(3),b.mc("ngModel",n.customLabelCheckbox),b.Ab(1),b.mc("ngModel",n.showDescription),b.Ab(1),b.mc("ngModel",n.customDescriptionCheckbox),b.Ab(1),b.mc("ngModel",n.disableCheckbox),b.Ab(1),b.mc("ngModel",n.errorCheckbox),b.Ab(1),b.mc("ngModel",n.customErrorCheckbox),b.Ab(19),b.mc("languages",b.pc(18,C)),b.Ab(1),b.Ic(n.simpleCheckboxHTML),b.Ab(3),b.mc("languages",b.pc(19,C)),b.Ab(1),b.Ic(n.templateCheckboxHTML)}},directives:[p.a,h.a,r.l,r.n,u.a],encapsulation:2}),e}()}],f=function(){function e(){}return e.\u0275mod=b.Lb({type:e}),e.\u0275inj=b.Kb({factory:function(n){return new(n||e)},imports:[[s.i.forChild(k)],s.i]}),e}(),x=function(){function e(){}return e.\u0275mod=b.Lb({type:e}),e.\u0275inj=b.Kb({factory:function(n){return new(n||e)},imports:[[c.c,f,r.h,a.a,t.a,l.c,i.a]]}),e}()}}]);