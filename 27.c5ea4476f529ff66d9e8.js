(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"3y+X":function(e,n,t){"use strict";t.r(n),t.d(n,"ProgressbarPageModule",function(){return x});var r=t("Nc42"),s=t("SVse"),a=t("rk0L"),i=t("s7LF"),o=t("gTaN"),l=t("PGw9"),g=t("DJJd"),c=t("IDUc"),b=t("iInd"),m=t("8Y7J"),u=t("17Ss"),h=t("0+hn"),p=t("Njz3"),d=t("2OsT"),f=t("YF55"),w=t("A1V2");function v(e,n){if(1&e&&(m.Tb(0,"small",9),m.Tb(1,"code"),m.Hc(2),m.fc(3,"json"),m.Sb(),m.Sb()),2&e){var t=m.ec();m.Ab(2),m.Ic(m.gc(3,1,t.multiBars))}}function S(e,n){if(1&e){var t=m.Ub();m.Tb(0,"sebng-checkbox",17),m.ac("ngModelChange",function(e){return m.xc(t),m.ec(2).animated=e}),m.Sb()}if(2&e){var r=m.ec(2);m.mc("ngModel",r.animated)}}function M(e,n){if(1&e){var t=m.Ub();m.Rb(0),m.Tb(1,"button",10),m.ac("click",function(){return m.xc(t),m.ec().simulateProgress()}),m.Hc(2," Simulate progress "),m.Sb(),m.Tb(3,"label"),m.Hc(4,"Progress value"),m.Sb(),m.Tb(5,"small"),m.Hc(6,"The current value of the progress in % (0 to 100)"),m.Sb(),m.Tb(7,"sebng-slider",11),m.ac("ngModelChange",function(e){return m.xc(t),m.ec().value=e}),m.Sb(),m.Tb(8,"label"),m.Hc(9,"Progress height"),m.Sb(),m.Tb(10,"small"),m.Hc(11,"The height of the progress bar in "),m.Tb(12,"code"),m.Hc(13,"px"),m.Sb(),m.Sb(),m.Tb(14,"sebng-stepper",12),m.ac("ngModelChange",function(e){return m.xc(t),m.ec().height=e}),m.Sb(),m.Tb(15,"sebng-dropdown",13),m.ac("ngModelChange",function(e){return m.xc(t),m.ec().themeItem=e}),m.Sb(),m.Tb(16,"sebng-checkbox",14),m.ac("ngModelChange",function(e){return m.xc(t),m.ec().showProgress=e}),m.Sb(),m.Tb(17,"sebng-checkbox",15),m.ac("ngModelChange",function(e){return m.xc(t),m.ec().striped=e}),m.Sb(),m.Fc(18,S,1,1,"sebng-checkbox",16),m.Qb()}if(2&e){var r=m.ec();m.Ab(1),m.mc("disabled",r.isBeingSimulated),m.Ab(6),m.mc("disabled",r.isBeingSimulated)("ngModel",r.value)("max",100)("min",0),m.Ab(7),m.mc("ngModel",r.height)("max",100)("min",1),m.Ab(1),m.mc("list",r.themeList)("ngModel",r.themeItem),m.Ab(1),m.mc("ngModel",r.showProgress),m.Ab(1),m.mc("ngModel",r.striped),m.Ab(1),m.mc("ngIf",r.striped)}}var I=[{path:"",component:function(){function e(){this.importString=t("8KFu"),this.snippet='<sebng-progress-bar [value]="progress"></sebng-progress-bar>',this.isBeingSimulated=!1,this.value=50,this.height=16,this.themeList=[{value:"success",label:"Success"},{value:"danger",label:"Danger"},{value:"info",label:"Info"},{value:"warning",label:"Warning"}],this.themeItem=this.themeList[0],this.multiBars=[{value:20,theme:"success"},{value:30,theme:"danger",striped:!0},{value:30,theme:"info",striped:!0,animated:!0},{value:20,theme:"warning",showProgress:!0}],document.title="Progressbar - SEB Angular Components"}return e.prototype.ngOnDestroy=function(){this.timerRef&&clearInterval(this.timerRef)},e.prototype.simulateProgress=function(){var e=this;this.timerRef&&clearInterval(this.timerRef),this.value=0,this.isBeingSimulated=!0,this.timerRef=setInterval(function(){e.value<100?e.value+=1:(e.isBeingSimulated=!1,clearInterval(e.timerRef))},100)},e.\u0275fac=function(n){return new(n||e)},e.\u0275cmp=m.Hb({type:e,selectors:[["app-progressbar-page"]],decls:10,vars:12,consts:[[3,"importString"],["example",""],[3,"value","height","showProgress","striped","animated","theme","multiBars"],["controls",""],[1,"form-group"],["label","Show custom bars","description","Show custom defined bars. *",3,"ngModel","ngModelChange"],["class","bg-dark p-3 mb-3",4,"ngIf"],[4,"ngIf"],["code",""],[1,"bg-dark","p-3","mb-3"],[1,"btn","btn-primary","mb-3","w-100",3,"disabled","click"],[1,"mb-3",3,"disabled","ngModel","max","min","ngModelChange"],[3,"ngModel","max","min","ngModelChange"],["label","Theme",3,"list","ngModel","ngModelChange"],["label","Show progress","description","Show progress as text.",3,"ngModel","ngModelChange"],["label","Striped","description","Display the progress bar as striped.",3,"ngModel","ngModelChange"],["label","Animated","description","Animate the stripes.",3,"ngModel","ngModelChange",4,"ngIf"],["label","Animated","description","Animate the stripes.",3,"ngModel","ngModelChange"]],template:function(e,n){1&e&&(m.Tb(0,"app-doc-page",0),m.Rb(1,1),m.Ob(2,"sebng-progress-bar",2),m.Qb(),m.Rb(3,3),m.Tb(4,"div",4),m.Tb(5,"sebng-checkbox",5),m.ac("ngModelChange",function(e){return n.showMultiBars=e}),m.Sb(),m.Sb(),m.Fc(6,v,4,3,"small",6),m.Fc(7,M,19,13,"ng-container",7),m.Qb(),m.Rb(8,8),m.Hc(9),m.Qb(),m.Sb()),2&e&&(m.mc("importString",n.importString),m.Ab(2),m.mc("value",n.value)("height",n.height)("showProgress",n.showProgress)("striped",n.striped)("animated",n.animated)("theme",null==n.themeItem?null:n.themeItem.value)("multiBars",n.showMultiBars?n.multiBars:null),m.Ab(3),m.mc("ngModel",n.showMultiBars),m.Ab(1),m.mc("ngIf",n.showMultiBars),m.Ab(1),m.mc("ngIf",!n.showMultiBars),m.Ab(2),m.Ic(n.snippet))},directives:[u.a,h.a,p.a,i.l,i.n,s.o,d.a,f.a,w.a],pipes:[s.h],encapsulation:2}),e}()}],T=function(){function e(){}return e.\u0275mod=m.Lb({type:e}),e.\u0275inj=m.Kb({factory:function(n){return new(n||e)},imports:[[b.i.forChild(I)],b.i]}),e}(),x=function(){function e(){}return e.\u0275mod=m.Lb({type:e}),e.\u0275inj=m.Kb({factory:function(n){return new(n||e)},imports:[[s.c,T,i.h,a.a,r.a,o.a,l.a,g.a,c.a]]}),e}()},"8KFu":function(e,n,t){"use strict";t.r(n),n.default='import { Component, Input, HostBinding } from "@angular/core";\n\nexport type ProggressTheme = "success" | "warning" | "danger" | "info";\nexport interface BarItem {\n    value: number;\n    striped?: boolean;\n    showProgress?: boolean;\n    animated?: boolean;\n    theme?: ProggressTheme;\n}\n\n/** A component which indicates progress */\n@Component({\n    selector: "sebng-progress-bar",\n    templateUrl: "./progressbar.component.html",\n})\nexport class ProgressbarComponent {\n    /** Value of progress bar */\n    @Input() value?: number;\n    /* Visual height of progress bar */\n    @Input() height?: number;\n    /** Element class name */\n    @Input() className?: string;\n    /** Element ID */\n    @Input() id?: string;\n    /** Show progress percentage value in text */\n    @Input() showProgress?: boolean;\n    /** Show progress bar with striped style */\n    @Input() striped?: boolean;\n    /** Show progress bar with animation */\n    @Input() animated?: boolean;\n    /** Progress bar theme, "success" | "warning" | "danger" | "info" */\n    @Input() theme?: ProggressTheme;\n    /** Display progress in multiple bars */\n    @Input() multiBars?: Array<BarItem>;\n    @HostBinding("style") styles: string = "width: 100%;";\n}\n'}}]);